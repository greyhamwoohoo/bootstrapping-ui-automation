# Runs the tests using Google Chrome (from a built / configured container) and target http://the-internet.herokuapp.com on the Internet
#
# Implementation:
# 1. The container is built from an Ubuntu VM
#    The container includes Google Chrome as well as the test binaries (multi-stage build)
# 2. The tests are run from the container and the results dropped onto the VM Host
# 3. Results are published from the VM host

trigger: none
pr: none

name: 1.0$(Rev:.r)

variables:
  - name: Build.Configuration
    value: Release
  - name: THEINTERNET_TEST_EXECUTION_CONTEXT
    value: empty    
  - name: THEINTERNET_BROWSERSETTINGS_FILES
    value: common-headless-chrome.json
  - name: THEINTERNET_REMOTEWEBDRIVERSETTINGS_FILES
    value: common-localhost-selenium.json
  - name: THEINTERNET_ENVIRONMENTSETTINGS_FILES
    value: internet.json
  - name: THEINTERNET_CONTROLSETTINGS_FILES
    value: common.json
  - name: TEST_TARGET_FOLDER
    value: NetCore-Selenium

stages:
- stage: Build
  jobs:
  - job: Build
    # https://docs.microsoft.com/en-us/azure/devops/pipelines/process/phases?view=azure-devops&tabs=yaml&viewFallbackFrom=vsts#timeouts
    timeoutInMinutes: 12
    cancelTimeoutInMinutes: 2
    pool:
      vmImage: ubuntu-18.04

    steps:
    - powershell: |
        docker build -t chrome-and-tests:local .
      workingDirectory: src/$(TEST_TARGET_FOLDER)
      displayName: Build Container

    - powershell: |
        New-Item -ItemType Directory -Name container-test-results -Force

        docker run -v "$($pwd)/container-test-results:/app/TestResults" -e THEINTERNET_TEST_EXECUTION_CONTEXT=$env:THEINTERNET_TEST_EXECUTION_CONTEXT -e THEINTERNET_BROWSERSETTINGS_FILES=$env:THEINTERNET_BROWSERSETTINGS_FILES chrome-and-tests:local --logger:"trx;LogFileName=TheInternet-Tests.trx"
      workingDirectory: $(Pipeline.Workspace)
      displayName: Run tests      

    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: VSTest
        testResultsFiles: '$(Pipeline.Workspace)/container-test-results/TheInternet-Tests.trx'
        failTaskOnFailedTests: true
        testRunTitle: 'TheInternet-Tests'
