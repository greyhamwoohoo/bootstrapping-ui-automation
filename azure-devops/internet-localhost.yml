# Runs the tests using Google Chrome and target http://localhost:9000
#
# Implementation:
# 1. All work is executed on a Ubuntu VM
# 2. The tests are run 'from the VM' against a container running the application

trigger: none
pr: none

name: 1.0$(Rev:.r)

variables:
  - name: Build.Configuration
    value: Release
  - name: YASF_TEST_EXECUTION_CONTEXT
    value: empty    
  - name: YASF_BROWSERSETTINGS_FILES
    value: common-headless-chrome.json
  - name: YASF_REMOTEWEBDRIVERSETTINGS_FILES
    value: common-localhost-selenium.json
  - name: YASF_ENVIRONMENTSETTINGS_FILES
    value: internet-localhost.json
  - name: YASF_CONTROLSETTINGS_FILES
    value: common.json
  - name: TEST_TARGET_FOLDER
    value: NetCore-Selenium

stages:
- stage: Build
  jobs:
  - job: Build
    # https://docs.microsoft.com/en-us/azure/devops/pipelines/process/phases?view=azure-devops&tabs=yaml&viewFallbackFrom=vsts#timeouts
    timeoutInMinutes: 12
    cancelTimeoutInMinutes: 2
    pool:
      vmImage: Ubuntu-20.04

    steps:
    - template: templates/build-and-publish.yml

    - powershell: |
        docker-compose up -d
      workingDirectory: infra/the-internet/docker-localhost
      displayName: Start TheInternet

    - task: PowerShell@2
      displayName: 'Wait For Container'
      inputs:
        targetType: filePath
        filePath: './azure-devops/wait-until-uri-is-ready.ps1'
        arguments: '-TimeoutInSeconds 120 -Uri http://localhost:9000 -ExpectStatusCode 200 -Verbose'
        failOnStderr: true

    - task: DotNetCoreCLI@2
      displayName: 'Run Raw SystemTests'
      inputs:
        command: custom
        custom: vstest
        arguments: '$(System.DefaultWorkingDirectory)/src/$(TEST_TARGET_FOLDER)/TheInternet.SystemTests.Raw/bin/$(Build.Configuration)/net5.0/publish/TheInternet.SystemTests.Raw.dll --logger:"trx;LogFileName=TheInternet-Tests.trx"'

    - task: PublishTestResults@2
      displayName: 'Publish Test Results **/TheInternet-Tests.trx'
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: VSTest
        testResultsFiles: '**/TheInternet-Tests.trx'
        failTaskOnFailedTests: true
        testRunTitle: 'TheInternet-Tests'
